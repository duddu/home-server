name: Rust Clippy
on:
  pull_request:
    branches:
      - main
    paths:
      - 'packages/rust-api/src/**'
      - '**/*.toml'
  workflow_call:
defaults:
  run:
    shell: bash
jobs:
  rust-clippy-lint:
    name: Lint Rust code
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 2
      - name: Detect changes in Rust source
        uses: tj-actions/changed-files@v32.1.2
        id: changed-source
        with:
          files: |
            packages/rust-api/src/**
            **/*.toml
      - name: Determine whether to continue
        if: ${{ steps.changed-source.outputs.any_changed == 'true' }}
        run: echo "do_lint=true" >> $GITHUB_ENV
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        if: env.do_lint
        with:
          profile: minimal
          toolchain: stable
          components: clippy
          override: true
      - uses: actions/cache@v3
        if: env.do_lint
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            packages/rust-api/target/
          key: cargo-clippy
      - name: Install required cargo
        if: env.do_lint
        run: cargo install clippy-sarif sarif-fmt || true
      - name: Run Clippy
        if: env.do_lint
        run:
          cargo clippy
            --all-features
            --message-format=json
            --manifest-path packages/rust-api/Cargo.toml | 
          clippy-sarif | 
          tee rust-clippy-results.sarif | 
          sarif-fmt
        continue-on-error: true
      - name: Fix sarif artifactLocation URIs
        if: env.do_lint
        run: 
          sed -i 's/"src\//"packages\/rust-api\/src\//g'
          rust-clippy-results.sarif
      - name: Upload analysis results to GitHub
        uses: github/codeql-action/upload-sarif@v2
        if: env.do_lint
        with:
          category: rust
          sarif_file: rust-clippy-results.sarif