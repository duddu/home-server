worker_processes 1;
pid /var/run/nginx.pid;

events { worker_connections 256; }

http {
    sendfile on;
    large_client_header_buffers 4 32k;

    server {
        listen 8080 default_server;
        listen [::]:8080 default_server;
        listen 8443 ssl http2 default_server;
        listen [::]:8443 ssl http2 default_server;
        server_name _;

        ssl_reject_handshake on;

        return 401;
    }

    server {
        listen 8080;
        listen [::]:8080;
        server_name davidedoronzo.myddns.me;

        return 301 https://$host$request_uri;
    }

    server {
        listen 8443 ssl http2;
        listen [::]:8443 ssl http2;
        server_name davidedoronzo.myddns.me;

        ssl_certificate /usr/share/nginx/ssl/certs/davidedoronzo_myddns_me.pem-chain;
        ssl_certificate_key /usr/share/nginx/ssl/private/davidedoronzo_myddns_me.key;

        ssl_client_certificate /usr/share/nginx/ssl/certs/davidedoronzo-ca.pem;
        ssl_verify_client on;

        ssl_prefer_server_ciphers on;
        ssl_protocols TLSv1.1 TLSv1.2 TLSv1.3;
        ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:ECDHE-RSA-RC4-SHA:ECDHE-ECDSA-RC4-SHA:RC4-SHA:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!3DES:!MD5:!PSK';

        location = /version {
            default_type application/json;
            return 200 '{"name":"home-server-nginx-reverse-proxy","version":"0.4.1"}';
        }

        location ~ ^/(router|(webpages|cgi-bin))(/.+)?$ {
            rewrite            ^/router|(.+)$ /$1 break;
            proxy_pass         http://tplinkwifi.net;
            proxy_redirect     off;
            proxy_http_version 1.1;
            proxy_cache_bypass $http_upgrade;
            proxy_set_header   Upgrade $http_upgrade;
            proxy_set_header   Connection keep-alive;
        }

        location /api/ {
            proxy_pass         http://host.containers.internal:8000/;
            proxy_redirect     off;
            proxy_http_version 1.1;
            proxy_cache_bypass $http_upgrade;
            proxy_set_header   Upgrade $http_upgrade;
            proxy_set_header   Connection keep-alive;
            proxy_set_header   Host $host;
            proxy_set_header   X-Real-IP $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Proto $scheme;
            proxy_set_header   X-Forwarded-Host $server_name;
            proxy_buffer_size           128k;
            proxy_buffers               4 256k;
            proxy_busy_buffers_size     256k;
        }
    }
}
