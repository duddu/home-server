daemon off;
worker_processes 1;
pid /var/run/nginx.pid;

events { worker_connections 256; }

http {
    server_tokens off;
    large_client_header_buffers 4 32k;
    access_log /var/log/nginx/nginx-reverse-proxy.log combined;

    upstream nr5103e {
        server 192.168.0.1:443;
    }

    upstream rust_api {
        server home-server:8000;
    }

    upstream rust_api_logs_websocket {
        server home-server:9091;
    }

    upstream nginx_logs_websocket {
        server home-server:9090;
    }

    ssl_certificate /usr/local/ssl/fullchain.pem;
    ssl_certificate_key /usr/local/ssl/private.key;
    ssl_dhparam /usr/local/share/ssl/dhparam.pem;

    ssl_client_certificate /usr/local/share/ssl/ca.pem;
    ssl_verify_client on;

    ssl_prefer_server_ciphers on;
    ssl_protocols TLSv1.1 TLSv1.2 TLSv1.3;
    ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!3DES:!MD5:!PSK';

    server {
        listen 8080 default_server;
        listen [::]:8080 default_server;
        listen 8443 ssl http2 default_server;
        listen [::]:8443 ssl http2 default_server;
        server_name _;

        ssl_reject_handshake on;

        location = /health {
            default_type text/plain;
            return 200 'OK';
        }

        location / {
            return 401;
        }
    }

    server {
        listen 8080;
        listen [::]:8080;
        server_name $DOMAIN_NAME *.$DOMAIN_NAME;

        location = /health {
            default_type text/plain;
            return 200 'OK';
        }

        location /.well-known/acme-challenge/ {
            root               /usr/local/share/www;
            autoindex          off;
            sendfile           on;
            sendfile_max_chunk 1m;
            tcp_nopush         on;
            tcp_nodelay        on;
        }

        location / {
            return 301 https://$host$request_uri;
        }
    }

    server {
        listen 8443 ssl http2;
        listen [::]:8443 ssl http2;
        server_name modem.$DOMAIN_NAME;

        location / {
            proxy_pass         https://nr5103e/;
            proxy_redirect     off;
            proxy_http_version 1.1;
            proxy_cache_bypass $http_upgrade;
            proxy_set_header   Upgrade $http_upgrade;
            proxy_set_header   Connection keep-alive;
            proxy_set_header   Host $host;
            proxy_set_header   X-Real-IP $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Proto $scheme;
            proxy_set_header   X-Forwarded-Host $server_name;
            proxy_pass_header  Server;
        }
    }

    server {
        listen 8443 ssl http2;
        listen [::]:8443 ssl http2;
        server_name api.$DOMAIN_NAME;

        location = /logs {
            proxy_pass         http://rust_api_logs_websocket/;
            proxy_http_version 1.1;
            proxy_set_header   Upgrade $http_upgrade;
            proxy_set_header   Connection upgrade;
            proxy_set_header   Host $host;
            proxy_set_header   X-Real-IP $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Proto $scheme;
            proxy_set_header   X-Forwarded-Host $server_name;
            proxy_pass_header  Server;
        }

        location / {
            proxy_pass         http://rust_api/;
            proxy_redirect     off;
            proxy_http_version 1.1;
            proxy_cache_bypass $http_upgrade;
            proxy_set_header   Upgrade $http_upgrade;
            proxy_set_header   Connection keep-alive;
            proxy_set_header   Host $host;
            proxy_set_header   X-Real-IP $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Proto $scheme;
            proxy_set_header   X-Forwarded-Host $server_name;
            proxy_pass_header  Server;
            proxy_buffer_size           128k;
            proxy_buffers               4 256k;
            proxy_busy_buffers_size     256k;
        }
    }

    server {
        listen 8443 ssl http2;
        listen [::]:8443 ssl http2;
        server_name $DOMAIN_NAME;

        location = /health {
            default_type text/plain;
            return 200 'OK';
        }

        location = /version {
            default_type application/json;
            return 200 '{"name":"home-server-nginx-reverse-proxy","version":"0.24.0"}';
        }

        location = /logs {
            proxy_pass         http://nginx_logs_websocket/;
            proxy_http_version 1.1;
            proxy_set_header   Upgrade $http_upgrade;
            proxy_set_header   Connection upgrade;
            proxy_set_header   Host $host;
            proxy_set_header   X-Real-IP $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Proto $scheme;
            proxy_set_header   X-Forwarded-Host $server_name;
            proxy_pass_header  Server;
        }
    }
}
